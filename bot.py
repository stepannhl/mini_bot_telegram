import logging
# –ò–º–ø–æ—Ä—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫ –¥–ª—è –±–æ—Ç–∞
from random import randint

from openpyxl import load_workbook

from aiogram import Bot, types
from aiogram.utils import executor
from aiogram.dispatcher import Dispatcher
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.contrib.middlewares.logging import LoggingMiddleware

import messages
from config import TOKEN

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ª–æ–≥–æ–≤
logging.basicConfig(format=u'%(filename)+13s [ LINE:%(lineno)-4s] %(levelname)-8s [%(asctime)s] %(message)s',
                    level=logging.DEBUG)
# –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ —á–µ—Ä–µ–∑ —Ç–æ–∫–µ–Ω
bot = Bot(token=TOKEN)
dp = Dispatcher(bot, storage=MemoryStorage())
dp.middleware.setup(LoggingMiddleware())
# –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–¥ - —ç–∫—Å–µ–ª—å —Ç–∞–±–ª–∏—á–∫–∞
wb = load_workbook(filename='Films.xlsx', read_only=True)
sheet_ranges = wb['lst']

# –∫–æ–º–º–µ–Ω—Ç—ã —É–±—Ä–∞—Ç—å –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å–µ—Ä–∏–∞–ª–æ–≤
buttons = ["–°–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–ºüé¨",
           "–°–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏üçï"
           # "–°–ª—É—á–∞–π–Ω—ã–π –°–µ—Ä–∏–∞–ªüéû",
           # "–°–ª—É—á–∞–π–Ω—ã–π —Å–µ—Ä–∏–∞–ª –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏üç™"
           ]
# –∑–∞–¥–∞—á–∞ –∫–Ω–æ–ø–æ–∫ –∫–æ –≤—Å–µ–º—É –±–æ—Ç—É
menu_buttons_f = ["–§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞üë©‚ÄçüöÄ",
                  "–î—Ä–∞–º–∞üíß",
                  "–ö–æ–º–µ–¥–∏—èüíÉ",
                  "–£–∂–∞—Å—Ç–∏–∫üëª",
                  "–¢—Ä–∏–ª–ª–µ—Äüçø",
                  "–ú—É–ª—å—Ç—Ñ–∏–ª—å–ºü•∫"]

menu_buttons_s = ["‚óÄ –ù–∞–∑–∞–¥",
                  "–°–ª—É—á–∞–π–Ω—ã–π —Å–µ—Ä–∏–∞–ª –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏üç™"]


# dry –Ω–∞—Å–∫–æ–ª—å–∫–æ —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ
def msg_caption(i):
    string = ('‚úÖ –ù–∞–∑–≤–∞–Ω–∏–µ: ' + str(sheet_ranges[f'A{i}'].value)
              + '\n\n' +
              'üé´ ' + str(sheet_ranges[f'B{i}'].value))
    return string


# –ó–∞–¥–∞–µ–º –º–µ—Ç–∫—É —Å—Ç–∞—Ä—Ç–∞ –±–æ—Ç–∞
@dp.message_handler(commands=['start'])
async def process_start_command(message: types.Message):
    # –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è keyboard –∏ –¥–∞–ª—å–Ω–µ–π—â–µ–µ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
    board = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    board.add(*buttons)
    # –¥–µ—Ä–≥–∞–µ–º –∏–º—è –æ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –ø–∏—à—É—â–µ–≥–æ –±–æ—Ç—É
    name = message.from_user.first_name
    await message.answer(messages.start(name), reply_markup=board)


# –Ω–∞—á–∞–ª–æ –∫–æ—Å—Ç—è–∫–∞ –±–æ—Ç–∞
@dp.message_handler(content_types=['text'])
async def send_random_value(message: types.Message):
    # –µ—Å–ª–∏ –±–æ—Ç —É–≤–∏–¥–µ–ª /back, –æ–Ω –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —ç–∫—Ä–∞–Ω –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –ø–æ –∫–Ω–æ–ø–∫–∞–º
    if message.text == '/back':
        board = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        board.add(*buttons)
        name = message.from_user.first_name
        await message.answer(messages.menu(name), reply_markup=board)
    # –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –æ–¥–Ω–æ–∏–º–µ–Ω–Ω–æ–π –∫–Ω–æ–ø–∫–∏
    elif message.text == '–°–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–ºüé¨':
        # –æ–±—ã—á–Ω—ã–π —Ä–∞–Ω–¥–æ–º–∞–π–∑–µ—Ä –Ω–∞ —Ä–∞–∑–º–µ—Ä –≤—Å–µ—Ö —Ñ–∏–ª—å–º–æ–≤ –≤ –±–¥
        r = str(randint(1, 31))
        await bot.send_photo(chat_id=message.from_user.id,
                             # –¥–µ—Ä–≥–∞–µ–º —Ñ–æ—Ç–∫–∏ –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∞–¥—Ä–µ—Å–∞
                             photo=open(f'C:/Users/stepa/Desktop/bot/bot start/pict/{r}.jpg', 'rb'),
                             caption=msg_caption(r))
    # —Ç–∫ –±–æ—Ç –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π, –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã –ª—é–±–æ–µ –≤—Ö–æ–∂–¥–µ–Ω–∏–µ –ø–æ –º–µ–Ω—é –º—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—é—â–µ
    elif message.text in ('–°–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏üçï',
                          '–§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞üë©‚ÄçüöÄ',
                          '–î—Ä–∞–º–∞üíß',
                          '–ö–æ–º–µ–¥–∏—èüíÉ',
                          '–£–∂–∞—Å—Ç–∏–∫üëª',
                          "–¢—Ä–∏–ª–ª–µ—Äüçø",
                          "–ú—É–ª—å—Ç—Ñ–∏–ª—å–ºü•∫"
                          ):
        # –∑–∞–¥–∞–µ–º –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ 2 = —Å–∫–æ–ª—å–∫–æ –≤ —Ä—è–¥—É –∫–Ω–æ–ø–æ–∫ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è
        board = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        board.add(*menu_buttons_f)
        # –ø—Ä–∏ —Ç–∞–ø–µ –Ω–∞ —Å–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º, –º—ã –≤—ã–≤–æ–¥–∏–º —Ç–µ–∫—Å—Ç–æ–≤–∫—É –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        # –≤ —Å–ª—É—á–∞–µ —á–µ–≥–æ –≤–æ–∑–≤—Ä–∞—Ç –ø–æ /back
        if message.text == '–°–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏üçï':
            await message.answer(messages.text_menu_f(), reply_markup=board)
        # –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ —Ç–æ—á–∫–µ /start
        if message.text == '–§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞üë©‚ÄçüöÄ':
            r = str(randint(1, 5))
            await bot.send_photo(chat_id=message.from_user.id,
                                 photo=open(f'C:/Users/stepa/Desktop/bot/bot start/pict/{r}.jpg', 'rb'),
                                 caption=msg_caption(r), reply_markup=board)
        elif message.text == '–î—Ä–∞–º–∞üíß':
            r = str(randint(6, 11))
            await bot.send_photo(chat_id=message.from_user.id,
                                 photo=open(f'C:/Users/stepa/Desktop/bot/bot start/pict/{r}.jpg', 'rb'),
                                 caption=msg_caption(r), reply_markup=board)
        elif message.text == '–ö–æ–º–µ–¥–∏—èüíÉ':
            r = str(randint(12, 16))
            await bot.send_photo(chat_id=message.from_user.id,
                                 photo=open(f'C:/Users/stepa/Desktop/bot/bot start/pict/{r}.jpg', 'rb'),
                                 caption=msg_caption(r), reply_markup=board)
        elif message.text == '–£–∂–∞—Å—Ç–∏–∫üëª':
            r = str(randint(17, 21))
            await bot.send_photo(chat_id=message.from_user.id,
                                 photo=open(f'C:/Users/stepa/Desktop/bot/bot start/pict/{r}.jpg', 'rb'),
                                 caption=msg_caption(r), reply_markup=board)
        elif message.text == '–¢—Ä–∏–ª–ª–µ—Äüçø':
            r = str(randint(22, 26))
            await bot.send_photo(chat_id=message.from_user.id,
                                 photo=open(f'C:/Users/stepa/Desktop/bot/bot start/pict/{r}.jpg', 'rb'),
                                 caption=msg_caption(r), reply_markup=board)
        elif message.text == '–ú—É–ª—å—Ç—Ñ–∏–ª—å–ºü•∫':
            r = str(randint(27, 31))
            await bot.send_photo(chat_id=message.from_user.id,
                                 photo=open(f'C:/Users/stepa/Desktop/bot/bot start/pict/{r}.jpg', 'rb'),
                                 caption=msg_caption(r), reply_markup=board)

        # –∫–∞–∂–¥—ã–π —Ä–∞–∑ –ø–æ —Ç–∞–ø—É –Ω–∞ –ª—é–±—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤–∫—É –∏–∑ –Ω–∞—á–∞–ª–∞, –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        if not message.text == '–°–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏üçï':
            await message.answer(messages.text_menu_f(), reply_markup=board)
    else:
        # –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö –∫–æ–º–º–∞–Ω–¥
        await message.answer(messages.no_command())


# –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ
async def shutdown(dispatcher: Dispatcher):
    await dispatcher.storage.close()
    await dispatcher.storage.wait_closed()


# –ø–µ—Ä–≤–∏—á–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
if __name__ == '__main__':
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button_1 = types.KeyboardButton(
        text="/start")
    keyboard.add(
        button_1)
    executor.start_polling(dp, on_shutdown=shutdown)
